# -*- coding: utf-8 -*-
"""mnist_classification_ann.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1L8A9XX16TR2OEDeqjC2c6TZZ3W6AIOsa
"""

import tensorflow
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense, Flatten

(x_train,y_train),(x_test, y_test) = keras.datasets.mnist.load_data()

import matplotlib.pyplot as plt
plt.imshow(x_train[0])
plt.imshow(x_train[2])

x_train

x_train = x_train / 255
x_test = x_test / 255

model = Sequential()
model.add(Flatten(input_shape=(28, 28)))
model.add(Dense(128, activation='relu'))
model.add(Dense(32, activation='relu'))
model.add(Dense(10, activation='softmax'))

model.summary()

model.compile(loss='sparse_categorical_crossentropy',optimizer='Adam',metrics=['accuracy'])

history = model.fit(x_train,y_train,epochs=10,validation_split=0.2)

y_prob= model.predict(x_test)

y_prob

y_pred=y_prob.argmax(axis=1)

y_pred

plt.imshow(x_test[1])

from sklearn.metrics import accuracy_score
accuracy_score(y_test,y_pred)

model.predict(x_test[0].reshape(1,28,28)).argmax(axis=1)

plt.figure()
plt.plot(history.history['loss'], label='Train Loss')
plt.plot(history.history['val_loss'], label='Validation Loss')
plt.title("Loss Curve")
plt.xlabel("Epochs")
plt.ylabel("Loss")
plt.legend()

plt.figure()
plt.plot(history.history['accuracy'], label='Train Accuracy')
plt.plot(history.history['val_accuracy'], label='Validation Accuracy')
plt.title("Accuracy Curve")
plt.xlabel("Epochs")
plt.ylabel("Accuracy")
plt.legend()